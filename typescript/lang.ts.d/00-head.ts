/*
    The Language
    Copyright (C) 2018, 2019  Zaoqi <zaomir@outlook.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

*/

function reduce_comma(xs: Array<string>): string {
    if (xs.length === 0) { return "" }
    let result = xs[0]
    for (let i = 1; i < xs.length; i++) {
        result += `,${xs[i]}`
    }
    return result
}

function LANG_ERROR(): never {
    throw "TheLanguage PANIC"
}
function LANG_ASSERT(x: boolean): void {
    if (!x) {
        return LANG_ERROR()
    }
}

type OrFalse<x> = x | false

type Nat = number

/* 一些命名规则
  _p 判断。一般返回boolean。
  _rec 递归。
  k _k 表示Continuation。类似Scheme的Continuation。
  _do 表示有副作用。
*/

/* !!!Racket Code Generator!!!
   (string-append "////RktCodeGen" "Example")
*/
// !!!Generated by Racket!!! !!!BEGIN!!!
////RktCodeGenExample
// !!!Generated by Racket!!! !!!END!!!

type RecordString = { [k: string]: any }
type RecordStringG<t> = { [k: string]: t }
type RecordStringNull = { [k: string]: string & number & never }

function recordstring_null_p(x: RecordString): x is RecordStringNull {
    for (const k in x) {
        return false
    }
    return true
}
function recordstring_shadow_copy<T>(x: RecordString & T): RecordString & T {
    let result: RecordString = {}
    for (const k in x) {
        result[k] = x[k]
    }
    return result as (RecordString & T)
}
